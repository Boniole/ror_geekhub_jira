---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/comments":
    get:
      summary: list comments
      tags:
      - Comments
      description: Get comments
      responses:
        '200':
          description: successful
    post:
      summary: create comment
      tags:
      - Comments
      description: Create comment
      responses:
        '200':
          description: successful
  "/api/v1/comments/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show comment
      tags:
      - Comments
      description: Get comment
      responses:
        '200':
          description: successful
    patch:
      summary: update comment
      tags:
      - Comments
      description: Update comment
      responses:
        '200':
          description: successful
    put:
      summary: update comment
      tags:
      - Comments
      description: Put comment
      responses:
        '200':
          description: successful
    delete:
      summary: delete comment
      tags:
      - Comments
      description: Delete comment
      responses:
        '200':
          description: successful
  "/api/v1/desks":
    get:
      summary: list desks
      tags:
      - Desks
      description: Get desks
      responses:
        '200':
          description: successful
    post:
      summary: create desk
      tags:
      - Desks
      description: Create desk
      responses:
        '200':
          description: successful
  "/api/v1/desks/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show desk
      tags:
      - Desks
      description: Get desk by id
      responses:
        '200':
          description: successful
    patch:
      summary: update desk
      tags:
      - Desks
      description: Update desk
      responses:
        '200':
          description: successful
    put:
      summary: update desk
      tags:
      - Desks
      description: Update desk
      responses:
        '200':
          description: successful
    delete:
      summary: delete desk
      tags:
      - Desks
      description: Delete desk
      responses:
        '200':
          description: successful
  "/api/v1/projects":
    get:
      summary: list projects
      tags:
      - Projects
      description: Get projects
      responses:
        '200':
          description: successful
    post:
      summary: create project
      tags:
      - Projects
      description: Create projects
      responses:
        '200':
          description: successful
  "/api/v1/projects/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show project
      tags:
      - Projects
      description: Get project
      responses:
        '200':
          description: successful
    patch:
      summary: update project
      tags:
      - Projects
      description: Update project
      responses:
        '200':
          description: successful
    put:
      summary: update project
      tags:
      - Projects
      description: Update project
      responses:
        '200':
          description: successful
    delete:
      summary: delete project
      tags:
      - Projects
      description: Delete project
      responses:
        '200':
          description: successful
  "/api/v1/tasks/{id}/comments":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: comments task
      tags:
      - Tasks
      description: Get comments by task id
      responses:
        '200':
          description: successful
  "/api/v1/tasks":
    get:
      summary: list tasks
      tags:
      - Tasks
      description: Get tasks list
      responses:
        '200':
          description: successful
    post:
      summary: create task
      tags:
      - Tasks
      description: Create task
      responses:
        '200':
          description: successful
  "/api/v1/tasks/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show task
      tags:
      - Tasks
      description: Get task by id
      responses:
        '200':
          description: successful
    patch:
      summary: update task
      tags:
      - Tasks
      description: Update task
      responses:
        '200':
          description: successful
    put:
      summary: update task
      tags:
      - Tasks
      description: Put task
      responses:
        '200':
          description: successful
    delete:
      summary: delete task
      tags:
      - Tasks
      description: Delete task
      responses:
        '200':
          description: successful
  "/api/v1/users":
    post:
      summary: create user
      tags:
      - Users
      description: Create a new user
      parameters: []
      responses:
        '201':
          description: User created
          content:
            application/json:
              examples:
                create_new_user:
                  value:
                    user:
                      name: Jovani Giorgio
                      password: password2023
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                create_new_user_without_name:
                  value:
                    user:
                      password: password2023
                create_new_user_without_password:
                  value:
                    user:
                      name: Jola
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    password:
                      type: string
              required:
              - user
  "/api/v1/login":
    post:
      summary: login user
      tags:
      - Users
      description: Login as user
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              examples:
                create_new_user:
                  value:
                    user:
                      name: Jovani Giorgio
                      password: password2023
        '400':
          description: Bad request
          content:
            application/json:
              examples:
                create_new_user_without_name:
                  value:
                    user:
                      password: password2023
                create_new_user_without_password:
                  value:
                    user:
                      name: Jola
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    password:
                      type: string
              required:
              - user
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 164.90.165.89
